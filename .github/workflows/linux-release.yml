name: linux-release

on:
  push:
    tags:
      - "v*.*"

jobs:

  build-linux-release:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install build dependencies
        run: |
          sudo apt -yq update
          sudo apt -yq install \
              git zip build-essential cmake xxd \
              liblzma-dev libsdl2-dev libconfig-dev libcurl4-openssl-dev libtinyxml2-dev \
              libconfig-dev libglm-dev libfreetype6-dev libpng-dev libminizip-dev zlib1g-dev \
              libvdpau-dev libva-dev libavcodec-dev libavfilter-dev libavformat-dev libavutil-dev \
              libpostproc-dev libswresample-dev libswscale-dev libmpv-dev libass-dev libbz2-dev \
              libfribidi-dev libzip-dev libarchive-dev libfuse-dev

      - name: Build pfbneo
        run: |
          mkdir cmake-build-pfbneo && cd cmake-build-pfbneo
          cmake -G "Unix Makefiles" -DPLATFORM_LINUX=ON -DOPTION_EMU=pfbneo -DCMAKE_BUILD_TYPE=Release ..
          make pfbneo.deps
          make pfbneo_linux_release
          mv *.zip $GITHUB_WORKSPACE

      - name: Build pgen
        run: |
          mkdir cmake-build-pgen && cd cmake-build-pgen
          cmake -G "Unix Makefiles" -DPLATFORM_LINUX=ON -DOPTION_EMU=pgen -DCMAKE_BUILD_TYPE=Release ..
          make pgen_linux_release
          mv *.zip $GITHUB_WORKSPACE

      - name: Build pnes
        run: |
          mkdir cmake-build-pnes && cd cmake-build-pnes
          cmake -G "Unix Makefiles" -DPLATFORM_LINUX=ON -DOPTION_EMU=pnes -DCMAKE_BUILD_TYPE=Release ..
          make pnes_linux_release
          mv *.zip $GITHUB_WORKSPACE

      - name: Build psnes
        run: |
          mkdir cmake-build-psnes && cd cmake-build-psnes
          cmake -G "Unix Makefiles" -DPLATFORM_LINUX=ON -DOPTION_EMU=psnes -DCMAKE_BUILD_TYPE=Release ..
          make psnes_linux_release
          mv *.zip $GITHUB_WORKSPACE

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: '*.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
